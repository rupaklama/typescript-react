[{"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/index.tsx":"1","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/Func.tsx":"2","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/ClassComp.tsx":"3","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/App.tsx":"4","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/reducers/index.ts":"5","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/reducers/todosReducer.ts":"6","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/actions/index.ts":"7","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/actions/todosActions.ts":"8"},{"size":1242,"mtime":1607887949951,"results":"9","hashOfConfig":"10"},{"size":683,"mtime":1607877004706,"results":"11","hashOfConfig":"10"},{"size":2360,"mtime":1607877210089,"results":"12","hashOfConfig":"10"},{"size":1510,"mtime":1607901805233,"results":"13","hashOfConfig":"10"},{"size":1475,"mtime":1607887657405,"results":"14","hashOfConfig":"10"},{"size":1674,"mtime":1607900079626,"results":"15","hashOfConfig":"10"},{"size":32,"mtime":1607898522630,"results":"16","hashOfConfig":"10"},{"size":3455,"mtime":1607898459060,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hrcof3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/index.tsx",[],["37","38"],"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/Func.tsx",[],["39","40"],"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/ClassComp.tsx",[],"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/App.tsx",["41"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// interface & action creator\nimport { Todo, fetchTodos, deleteTodo } from './actions';\n\n// store state interface which describes entire store state\nimport { StoreState } from './reducers';\n\n// props structure for component level state\ninterface AppState {\n  fetching: boolean;\n}\n\nconst App = (props: AppState): JSX.Element => {\n  // component level state\n  // const [fetching, setFetching] = useState(false)\n\n  // useDispatch hook to dispatch an action creator\n  const dispatch = useDispatch();\n\n  // useSelector hook to get access to todos state in redux store\n  // naming same as our 'todos' state in combineReducers - key\n  // this hook takes an arrow func with arg state & which part of state we want from combineReducers\n  // must pass a selector to useSelector\n  const todos = useSelector((state: StoreState) => state.todos);\n\n  const handleButtonClick = (): void => {\n    dispatch(fetchTodos());\n\n    \n  };\n\n  const handleDelete = (id: number): void => {\n    dispatch(deleteTodo(id));\n  };\n\n  const renderList = (): JSX.Element[] => {\n    // returning array of elements\n    return todos.map((todo: Todo) => (\n      <div onClick={() => handleDelete(todo.id)} key={todo.id}>\n        {todo.title}\n      </div>\n    ));\n  };\n\n  return (\n    <div>\n      <h1>React Redux Typescript</h1>\n      <button onClick={handleButtonClick}>Fetch Todos</button>\n      {renderList()}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/reducers/index.ts",[],"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/reducers/todosReducer.ts",[],"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/actions/index.ts",[],"/Users/rupaklama/Desktop/TYPESCRIPT/react_typescript/react-typescript-app/src/actions/todosActions.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]